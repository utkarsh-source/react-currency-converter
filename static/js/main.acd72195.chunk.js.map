{"version":3,"sources":["images/exchange.svg","images/close.svg","components/Converter.jsx","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","section","Form","form","Label","label","Amout","input","ErrorMessage","aside","StyledSelect","Select","Submit","button","disabled","styles","control","provided","state","width","height","border","borderRadius","singleValue","fontSize","fontWeight","color","option","padding","BASE_URL","process","ConversionWrapper","div","Converter","useState","amount","setAmount","error","setError","data","setData","loading","setLoading","from","setFrom","to","setTo","convert","setConvert","cLoading","setcLoading","rates","conversion_rates","options","Object","entries","map","key","value","validate","length","test","conversion","amountForConversion","convertFrom","convertTo","a","axios","get","console","log","useEffect","then","catch","err","defaultValue","find","onSubmit","e","preventDefault","className","htmlFor","id","name","type","onChange","target","placeholder","onBlur","isLoading","onClick","tmp","src","exchange","alt","size","conversion_result","close","modal","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acd72195.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/exchange.020fa281.svg\";","export default __webpack_public_path__ + \"static/media/close.b7a9c534.svg\";","import React, {useState, useEffect} from 'react' \r\nimport styled from 'styled-components'\r\nimport exchange from '../images/exchange.svg'\r\nimport close from '../images/close.svg'\r\nimport Select from 'react-select'\r\nimport {BeatLoader} from 'react-spinners'\r\nimport axios from 'axios'\r\n\r\nconst Wrapper = styled.section`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: linear-gradient(\r\n    90deg,\r\n    rgba(48, 16, 255, 1) 0%,\r\n    rgba(100, 115, 255, 1) 100%\r\n  );\r\n`\r\n\r\nconst Form = styled.form`\r\n    position: relative;\r\n    display: flex;\r\n    padding:3rem;\r\n    align-items: center;\r\n    height: max-content;\r\n    background: #161a2b;\r\n    border-radius:0.5rem;\r\n    flex-direction: column;\r\n    &>hr{\r\n        border: none;\r\n        width: 100%;\r\n        height: 0.1rem;\r\n        background-color: white;\r\n        margin: 1.5rem 0;\r\n    }\r\n    &>h1{\r\n        font-size: 2.5rem;\r\n        color: white;\r\n        font-weight: bold;\r\n        text-align: center;\r\n    }\r\n    &>.box{\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-items: center;\r\n        &.first{\r\n            margin-bottom: 1.5rem;\r\n        }\r\n    }\r\n    &>.sign{\r\n        position: relative;\r\n        height: 4rem;\r\n        width: 4rem;\r\n        display: grid;\r\n        place-items: center;\r\n        margin-top: 2rem;\r\n        cursor: pointer;\r\n        transition: all 0.3s;\r\n        user-select: none;\r\n        &:active{\r\n            transform: rotate(-10deg)\r\n        }\r\n        & >img{\r\n            height: 100%;\r\n            width: 100%;\r\n            filter: invert(44%) sepia(48%) saturate(2542%) hue-rotate(88deg) brightness(110%) contrast(114%);\r\n        }\r\n    }\r\n` \r\nconst Label = styled.label`\r\n    margin-bottom: 0.8rem;\r\n    font-size: 1.3rem;\r\n    font-weight: bold;\r\n    color: #3eda00;\r\n`\r\nconst Amout = styled.input`\r\n    padding-left: 1rem;\r\n    height: 5rem;\r\n    width: 25rem;\r\n    border-radius: 0.2rem;\r\n    border: none;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst ErrorMessage = styled.aside`\r\n    color: red;\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    border-radius: 0.3rem;\r\n    margin: 0.5rem 0;\r\n    margin-bottom: 1rem;\r\n`\r\nconst StyledSelect = styled(Select)``\r\nconst Submit = styled.button`\r\n    width: 100%;\r\n    padding: 0 1.5rem;\r\n    height: 5rem;\r\n    display: grid;\r\n    place-items: center;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    color: black;\r\n    border: none;\r\n    border-radius: 0.2rem;\r\n    background-color: ${({ disabled })=>disabled ? \"gray\" :  \"#f3ba1f\"};\r\n    cursor: pointer;\r\n    margin-top: 1.5rem;\r\n\r\n`\r\n\r\n\r\nconst styles = {\r\n    control:(provided, state) => ({\r\n        ...provided,\r\n        width: '25rem',\r\n        height: '5rem',\r\n        border: 'none',\r\n        borderRadius: '0.2rem'\r\n    }),\r\n    singleValue: (provided, state) => ({\r\n        ...provided,\r\n        fontSize: \"1.5rem\",\r\n        fontWeight: 'bolder',\r\n        color: '#dd0000'\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        padding: '1rem 1rem',\r\n        fontSize: '1.3rem'\r\n    })\r\n}\r\nconst BASE_URL = `https://v6.exchangerate-api.com/v6/${process.env.REACT_APP_RATE_API}/latest/USD`\r\n\r\nconst ConversionWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #161a2b;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    &>span{\r\n        font-size: 2rem;\r\n        margin-bottom: 1rem;\r\n        text-align: center;\r\n    }\r\n    &>p{\r\n        display: block;\r\n        font-size: 3rem;\r\n        color: #3eda00;\r\n        text-align: center;\r\n\r\n    }\r\n    &>img{\r\n        position: absolute;\r\n        top: 1.5rem;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        right: 1.5rem;\r\n        filter: invert(100%);\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nfunction Converter() {\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const [data, setData] = useState('')\r\n    // const [dataError, setdataError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [from, setFrom] = useState(\"INR\");\r\n    const [to, setTo] = useState(\"USD\");\r\n    const [convert, setConvert] = useState(\"\")\r\n    const [cLoading, setcLoading] = useState(false)\r\n    let rates = data &&  data?.conversion_rates;\r\n    // let baseCode = data && data?.base_code;\r\n    // let time = data &&  data?.time_last_update_utc;\r\n    const options = rates && Object.entries(rates).map(([key, value]) => ({ value: key, label: key}))\r\n    function validate(amount) {\r\n        if (!amount.length || !/^-?\\d+\\.?\\d*$/.test(amount)) {\r\n            setError(true)\r\n        } else {\r\n            setError(false)\r\n        }\r\n    }\r\n    const conversion = async (amountForConversion, convertFrom, convertTo) => {\r\n        try {\r\n            setcLoading(true)\r\n            const { data } = await axios.get(`https://v6.exchangerate-api.com/v6/${process.env.REACT_APP_RATE_API}/pair/${convertFrom}/${convertTo}/${amountForConversion}`)\r\n            setConvert(data)\r\n            setcLoading(false)\r\n        } catch (err) {\r\n            setcLoading(false)\r\n            console.log(err)\r\n        }\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        validate(amount)\r\n        if (!error) {\r\n            conversion(amount, from, to)\r\n        }\r\n    }\r\n    function modal(amount, from, to, value) {\r\n            return (\r\n                <ConversionWrapper>\r\n                    <img onClick={()=>setConvert(\"\")} src={close} alt=\"close\"/>\r\n                    <span>{amount + ' ' + from + \" equals to \"}</span>\r\n                    <p>{value + ' ' + to}</p>\r\n                </ConversionWrapper>\r\n            )\r\n        }\r\n    const handleChange = (e) => {\r\n        setAmount(e.target.value)\r\n    }\r\n    const handleBlur = () => {\r\n        validate(amount)\r\n    }\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(BASE_URL).then(({ data }) => {\r\n            setData(data)\r\n            setLoading(false)\r\n        }).catch(err => {\r\n            if (err) {\r\n                console.error(err)\r\n            }\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n    const defaultValue = (options, value) => {\r\n        return options ? options.find(option => option.value === value) : {}\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            <Form onSubmit={handleSubmit}>\r\n                <h1>Currency Converter</h1>\r\n                <hr/>\r\n                <div className='box first'>\r\n                    <Label htmlFor=\"amount\">Amount</Label>\r\n                    <Amout\r\n                        id='amount'\r\n                        name=\"amount\"\r\n                        type=\"text\"\r\n                        onChange={handleChange}\r\n                        value={amount}\r\n                        placeholder='Enter amount'\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    {error && <ErrorMessage>{!amount.length ? \"Field cannot be empty.\" : \"Enter a valid amount!\"}</ErrorMessage>}\r\n                </div>\r\n                <div className='box'>\r\n                    <Label htmlFor=\"from\">From</Label>\r\n                    <StyledSelect\r\n                        id=\"from\"\r\n                        options={options}\r\n                        onChange={option => setFrom(option.value)}\r\n                        value={defaultValue(options, from)}\r\n                        isLoading={loading}\r\n                        styles={styles}></StyledSelect>\r\n                </div>\r\n                <div className=\"sign\" onClick={() => {\r\n                    const tmp = from\r\n                    setFrom(to)\r\n                    setTo(tmp)\r\n                }}>\r\n                    <img src={exchange} alt=\"sign\"/>\r\n                </div>\r\n                <div className='box'>\r\n                    <Label htmlFor=\"to\">To</Label>\r\n                    <StyledSelect\r\n                        id=\"to\"\r\n                        options={options}\r\n                        onChange={option => setTo(option.value)}\r\n                        value={defaultValue(options, to)}\r\n                        isLoading={loading}\r\n                        styles={styles}></StyledSelect>\r\n                </div>\r\n                <Submit type=\"submit\" disabled={error ? true : false}>{cLoading ? <BeatLoader loading={cLoading} color=\"black\" size={10}/> : \"Convert\"}</Submit>\r\n                {(!cLoading && convert?.conversion_result) && modal(amount, from, to, convert?.conversion_result)}\r\n            </Form>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Converter\r\n","import './App.css';\nimport Converter from './components/Converter'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}